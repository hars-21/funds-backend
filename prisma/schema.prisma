generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String          @id @default(cuid())
  role      Role            @default(USER)
  email     String          @unique
  name      String?
  password  String?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  purchases UserPurchase[]
  notifications Notification[]
}

model Application {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  message   String
  status    String   @default("pending")
  createdAt DateTime @default(now())
}

model Plan {
  id        String         @id @default(cuid())
  name      String
  amount    Int
  duration  Int
  features  String[]
  isActive  Boolean        @default(true)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  purchases UserPurchase[]
}

model UserPurchase {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  plan      Plan     @relation(fields: [planId], references: [id])
  planId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  DSA
  SUPERADMIN
  USER
}

model Loan {
  id      String   @id @default(cuid())
  type    LoanType
  subtype String
  amount  Int       @default(0)
  review  String?
  status  LoanStatus  @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum LoanType {
  PRIVATE
  GOVERNMENT
  INSURANCE
}

enum LoanStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}

enum PrivateLoanType {
  PERSONAL
  HOME
  BUSINESS
  CAR
  PROPERTY
}

enum GovermentLoanType {
  MUDRA
  MSME
  PMEGP
  CGTMSE
  STARTUPINDIA
}

enum InsuranceLoanType {
  HEALTH
  LIFE
  CAR
  HOME
}

model Notification {
  id              String       @id @default(cuid())
  type            NotificationType
  title           String
  message         String
  isRead          Boolean   @default(false)
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  createdAt       DateTime  @default(now())
}

enum NotificationType {
  DSA_UPDATE
  TICKET
  COMPLIANCE_ALERT
  SYSTEM
}

model Document {
  id              Int           @id @default(autoincrement())
  type            DocumentType
  documentUrl     String
  isVerified      Boolean       @default(false)
  isFlagged       Boolean       @default(false)
  verificationNotes String?
  createdAt       DateTime      @default(now())
}


enum DocumentType {
  ID
  PASSPORT
  DRIVERS_LICENSE
  NATIONAL_ID
}
